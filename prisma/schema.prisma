// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  email    String     @unique
  password String
  profile  Profile?
  posts    Post[]
  blogs    Blog[]
  Comments Comments[]
}

model Profile {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  Ask       String
  Community String?
  Username  String?
  Bio       String?
  Profilepictureurl String?
  Gender    String?
  Followers String?
  Following String?
  user      User   @relation(fields: [userId], references: [id])
  userId    String @unique @db.ObjectId
}

model Post {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  Caption  String
  ImageUrl String
  Likes    String
  user     User       @relation(fields: [userId], references: [id])
  userId   String
  Comments Comments[]
}

model Blog {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  ImageUrl String
  Content  String
  Likes    String
  Title    String
  user     User       @relation(fields: [userId], references: [id])
  userId   String
  Comments Comments[]
}

model Comments {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  Text   String
  user   User   @relation(fields: [userId], references: [id])
  userId String
  post   Post   @relation(fields: [postId], references: [id])
  postId String
  blog   Blog   @relation(fields: [blogId], references: [id])
  blogId String
}
